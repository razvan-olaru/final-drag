// forms page
import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import Single from "../components/UI/Layout/Single";
import Main from "../components/UI/Layout/Main";
import { getSession } from "next-auth/react";
import { useEffect } from "react";

//TODO: implement renderUserForms
function renderUserForms(response: any) {}

const Home: NextPage = () => {
  useEffect(() => {
    const getUserForms = async () => {
      await fetch("/api/get-form", {
        method: "GET",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ userID: "123456789" }),
      })
        .then((response) => renderUserForms(response))
        .catch((err) => console.log(err));
    };
    getUserForms();
  }, []);
  const hello = trpc.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Clrty Dashboard</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main>
        <Single title="Dashboard">Dashboard</Single>
      </Main>
    </>
  );
};

export async function getServerSideProps(context: any) {
  const session = await getSession(context);

  if (!session) {
    return {
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }

  return {
    props: { session },
  };
}

export default Home;
